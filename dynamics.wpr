#!wing
#!version=8.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('strogatz'),
                        'excludes': ['exercises_8.synctex.gz',
                                     '6-3-10.png',
                                     'exercises_8.pdf',
                                     'exercises_8.blg',
                                     'exercises_8.bbl',
                                     'exercises_8.log',
                                     'exercises_8.tex',
                                     'README.md',
                                     'exercises_8.aux'],
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True},
                       {'dirloc': loc('simulation'),
                        'excludes': ['mol2.py',
                                     'mol_create.py',
                                     'spheres.py'],
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-list = [loc('duffing.py'),
                  loc('henon.py'),
                  loc('lorenz.py'),
                  loc('ntest.py'),
                  loc('phase.py'),
                  loc('README.md'),
                  loc('rk4.py'),
                  loc('rki.py'),
                  loc('roessler.py'),
                  loc('strogatz/exercise_6_4_4.py'),
                  loc('utilities.py')]
proj.file-type = 'normal'
proj.launch-config = {loc('henon.py'): ('project',
        ('--xmin 0.0 --xmax 0.5 --ymin 0.2 --ymax 0.3',
         '')),
                      loc('simulation/mol_dynamics.py'): ('project',
        (' --show --load issue8.bin',
         ''))}
[user attributes]
debug.show-args-dialog = {loc('barnes_hut.py'): False,
                          loc('duffing.py'): False,
                          loc('lbmFlowAroundCylinder.py'): False,
                          loc('lorentz.py'): False,
                          loc('lorenz.py'): False,
                          loc('parityRule.py'): False,
                          loc('parityRuleSolution.py'): False,
                          loc('rk4.py'): False,
                          loc('rki.py'): False,
                          loc('roessler.py'): False,
                          loc('test.py'): False,
<<<<<<< HEAD
                          loc('unknown:<untitled> #17'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqEmVIDbK',
        'size-state': 'maximized',
=======
                          loc('unknown:<untitled> #70'): False}
edit.file-encoding = {loc('README.md'): 'utf_8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqE'\
        'mVIDbK',
        'size-state': '',
>>>>>>> 5a4950d47e6ad8b65eac73dcdd35f9e7510164c6
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [3],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
<<<<<<< HEAD
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(0,)],
=======
        'tree-states': {'deep': {'expanded-nodes': [(1,)],
                                 'selected-nodes': [(1,
        5)],
>>>>>>> 5a4950d47e6ad8b65eac73dcdd35f9e7510164c6
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../astro/make_img.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../astro/make_img.py'),
                             'plot')]],
        'top-node': [('generic attribute',
                      loc('../astro/make_img.py'),
                      'config_path')]},
        loc('../astro/plot_points.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../astro/plot_points.py'),
                             'y3s')]],
        'top-node': [('generic attribute',
                      loc('../astro/plot_points.py'),
                      'i')]},
        loc('../bioinformatics/DBRU.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../bioinformatics/DBRU.py'),
                      'a')]},
        loc('../bioinformatics/GREP.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../bioinformatics/GREP.py'),
                      'count_kmers')]},
        loc('../bioinformatics/PCOV.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../bioinformatics/PCOV.py'),
                      'pcov')]},
        loc('../bioinformatics/rosalind.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../bioinformatics/rosalind.py'),
                      'dbru')]},
        loc('../galaxy/configure.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../galaxy/configure.py'),
                      'args')]},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('bacteria.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('class def',
        loc('bacteria.py'),
        'Bacteria')]},
        loc('barnes_hut.py'): {'expanded-nodes': [],
                               'selected-nodes': [[('function def',
        loc('barnes_hut.py'),
        'add')]],
                               'top-node': [('function def',
        loc('barnes_hut.py'),
        'add')]},
        loc('chaos_book/hw1Rossler/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('lbmFlowAroundCylinder.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('lbmFlowAroundCylinder.py'),
                      'col1')]},
        loc('lv.py'): {'expanded-nodes': [],
                       'selected-nodes': [],
                       'top-node': None},
        loc('parityRule.py'): {'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': [('generic attribute',
        loc('parityRule.py'),
        'i')]},
        loc('simulation/barnes_hut.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('simulation/barnes_hut.py'),
                      'add')]},
        loc('simulation/mol2.py'): {'expanded-nodes': [],
                                    'selected-nodes': [[('function def',
        loc('simulation/mol2.py'),
        'get_next_wall_collision')]],
                                    'top-node': [('function def',
        loc('simulation/mol2.py'),
        'boltzmann')]},
        loc('simulation/mol_dynamics.py'): {'expanded-nodes': [[('function def',
        loc('simulation/mol_dynamics.py'),
        'plot_results')]],
        'selected-nodes': [[('generic attribute',
                             loc('simulation/mol_dynamics.py'),
                             'args')]],
        'top-node': [('generic attribute',
                      loc('simulation/mol_dynamics.py'),
                      'args')]},
        loc('simulation/spike.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('function def',
        loc('simulation/spike.py'),
        'fix_bins')]},
        loc('strogatz/README.md'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('strogatz_6_1.py'): {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': [('generic attribute',
        loc('strogatz_6_1.py'),
        'eps')]},
        loc('strogatz_6_5_19.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('trafficLights.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('class def',
        loc('trafficLights.py'),
        'CAR')]},
<<<<<<< HEAD
        loc('unknown:<untitled> #18'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None}},
                                'browse_mode': 'Current Module',
=======
        loc('../galaxy/configure.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../galaxy/configure.py'),
                      'args')]},
        loc('unknown:<untitled> #71'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None}},
                                'browse_mode': u'Current Module',
>>>>>>> 5a4950d47e6ad8b65eac73dcdd35f9e7510164c6
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.29875986471251414,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'phase',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 40,
                                       'fReplaceText': 'eta',
                                       'fReverse': False,
                                       'fSearchText': 'rho',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
<<<<<<< HEAD
                       'sel-line': 2,
                       'sel-line-start': 157,
                       'selection_end': 157,
                       'selection_start': 157,
                       'zoom': 0}),
=======
                       'sel-line': 0L,
                       'sel-line-start': 0L,
                       'selection_end': 0L,
                       'selection_start': 0L,
                       'zoom': 0L}),
>>>>>>> 5a4950d47e6ad8b65eac73dcdd35f9e7510164c6
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('simulation/mol_dynamics.py'),
        {'attrib-starts': [],
         'code-line': '# get_rho\r\n',
<<<<<<< HEAD
         'first-line': 342,
         'folded-linenos': [],
         'sel-line': 353,
         'sel-line-start': 12964,
         'selection_end': 12972,
         'selection_start': 12970,
         'zoom': 0},
=======
         'first-line': 342L,
         'folded-linenos': [],
         'sel-line': 353L,
         'sel-line-start': 12964L,
         'selection_end': 12972L,
         'selection_start': 12970L,
         'zoom': 0L},
>>>>>>> 5a4950d47e6ad8b65eac73dcdd35f9e7510164c6
        1589140190.585],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [],
          'code-line': '# get_eta\r\n',
          'first-line': 342,
          'folded-linenos': [],
          'sel-line': 353,
          'sel-line-start': 12964,
          'selection_end': 12973,
          'selection_start': 12970,
          'zoom': 0},
         1589140206.666],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [('get_eta|0|',
                             356)],
          'code-line': 'def get_eta(N,R,L=[1,1,1],D=3):\r\n',
          'first-line': 342,
          'folded-linenos': [],
          'sel-line': 356,
          'sel-line-start': 13002,
          'selection_end': 13013,
          'selection_start': 13010,
          'zoom': 0},
         1589140207.77],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [('get_R|0|',
                             359)],
          'code-line': 'def get_R(N,eta,L=[1,1,1],D=3):\r\n',
          'first-line': 342,
          'folded-linenos': [],
          'sel-line': 359,
          'sel-line-start': 13089,
          'selection_end': 13104,
          'selection_start': 13101,
          'zoom': 0},
         1589140208.958],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [('get_R|0|',
                             359)],
          'code-line': '    return ((L[0]*L[1]*L[2]*eta*D)/(4*N*math.pi))**(1/3)\r\n',
          'first-line': 349,
          'folded-linenos': [],
          'sel-line': 360,
          'sel-line-start': 13122,
          'selection_end': 13153,
          'selection_start': 13150,
          'zoom': 0},
         1589140209.93],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [('create_configuration|0|',
                             367)],
          'code-line': "            print (f'Radius = {R}, Density = {get_eta(N,R,L)}, {i+1} attempts')\r\n",
          'first-line': 382,
          'folded-linenos': [],
          'sel-line': 399,
          'sel-line-start': 14482,
          'selection_end': 14535,
          'selection_start': 14532,
          'zoom': 0},
         1589140211.261],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [('create_configuration|0|',
                             367)],
          'code-line': "    raise MolecularDynamicsError(f'Failed to create valid configuration for R={R}, density={get_eta(N,R,L)}, within {NT} attempts')\r\n",
          'first-line': 393,
          'folded-linenos': [],
          'sel-line': 404,
          'sel-line-start': 14694,
          'selection_end': 14793,
          'selection_start': 14790,
          'zoom': 0},
         1589140214.335],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [('create_parser|0|',
                             475)],
          'code-line': "        product.add_argument('--eta',  type=float, default=-1,               help='Density of spheres (alternative to R)')\r\n",
          'first-line': 464,
          'folded-linenos': [],
          'sel-line': 481,
          'sel-line-start': 17245,
          'selection_end': 17280,
          'selection_start': 17277,
          'zoom': 0},
         1589140216.08],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [('plot_results|0|',
                             525)],
          'code-line': "            f'{topology.pretty()}: N={N}, $\\\\eta$={get_rho(N,R,L):.4f}, collisions={collision_count:,},'\r\n",
          'first-line': 528,
          'folded-linenos': [],
          'sel-line': 545,
          'sel-line-start': 20911,
          'selection_end': 20959,
          'selection_start': 20956,
          'zoom': 0},
         1589140218.084],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [('plot_results|0|',
                             525)],
          'code-line': "            f'{topology.pretty()}: N={N}, $\\\\eta$={get_eta(N,R,L):.4f}, collisions={collision_count:,},'\r\n",
          'first-line': 528,
          'folded-linenos': [],
          'sel-line': 545,
          'sel-line-start': 20911,
          'selection_end': 20969,
          'selection_start': 20966,
          'zoom': 0},
         1589140219.324],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [],
          'code-line': '    R               = args.R if args.eta == -1 else get_R(N,args.rho)\r\n',
          'first-line': 593,
          'folded-linenos': [],
          'sel-line': 610,
          'sel-line-start': 23678,
          'selection_end': 23718,
          'selection_start': 23715,
          'zoom': 0},
         1589140221.461],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [],
          'code-line': '    R               = args.R if args.eta == -1 else get_R(N,args.eta)\r\n',
          'first-line': 593,
          'folded-linenos': [],
          'sel-line': 610,
          'sel-line-start': 23678,
          'selection_end': 23746,
          'selection_start': 23746,
          'zoom': 0},
         1589140226.706],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [('plot_results|0|',
                             525)],
          'code-line': '        plot_positions()\r\n',
          'first-line': 659,
          'folded-linenos': [],
          'sel-line': 561,
          'sel-line-start': 21813,
          'selection_end': 21835,
          'selection_start': 21835,
          'zoom': 0},
         1589144968.347],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [('plot_results|0|',
                             525),
                            ('plot_results|0|.plot_position|0|',
                             526)],
          'code-line': "            axes[1].legend(loc='best')  \r\n",
          'first-line': 565,
          'folded-linenos': [],
          'sel-line': 536,
          'sel-line-start': 20409,
          'selection_end': 20428,
          'selection_start': 20421,
          'zoom': 0},
         1589145000.988],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [('plot_results|0|',
                             525)],
          'code-line': '        plot_positions(axis=axes[1],N=N)\r\n',
          'first-line': 550,
          'folded-linenos': [],
          'sel-line': 561,
          'sel-line-start': 21822,
          'selection_end': 21822,
          'selection_start': 21822,
          'zoom': 0},
         1589145165.744],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [('plot_results|0|',
                             525),
                            ('plot_results|0|.plot_positions|0|',
                             544)],
          'code-line': '            n,bins,_ =axis.hist([[particle.position[i] for particle in configuration] for i in range(len(L))],\r\n',
          'first-line': 541,
          'folded-linenos': [],
          'sel-line': 556,
          'sel-line-start': 21535,
          'selection_end': 21557,
          'selection_start': 21557,
          'zoom': 0},
         1589147660.314],
        [loc('simulation/spike.py'),
         {'attrib-starts': [('fix_bins|0|',
                             0)],
          'code-line': 'def fix_bins(n,bins,quota=5):\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 431,
          'selection_start': 0,
          'zoom': 0},
         1589147663.434],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': '| 7|mol_dynamics.py |Molecular dynamics of hard spheres.|\r\n',
          'first-line': 10,
          'folded-linenos': [],
          'sel-line': 43,
          'sel-line-start': 2578,
          'selection_end': 2578,
          'selection_start': 2578,
          'zoom': 0},
         1589482788.897],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [('plot_results|0|',
                             525),
                            ('plot_results|0|.plot_positions|0|',
                             544)],
          'code-line': '            n,bins,_ = axis.hist([[particle.position[i] for particle in configuration] for i in range(len(L))],\r\n',
          'first-line': 541,
          'folded-linenos': [],
          'sel-line': 556,
          'sel-line-start': 21535,
          'selection_end': 21557,
          'selection_start': 21557,
          'zoom': 0},
         1600149712.477],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': '| 7|mol_dynamics.py |Molecular dynamics of hard spheres.|\r\n',
          'first-line': 10,
          'folded-linenos': [],
<<<<<<< HEAD
          'sel-line': 43,
          'sel-line-start': 2578,
          'selection_end': 2578,
          'selection_start': 2578,
          'zoom': 0},
         1600149714.01]],
        20),
        'current-loc': None,
        'editor-state-list': [],
        'has-focus': False,
        'locked': False},
        []),
                               'open_files': []},
=======
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 431L,
          'selection_start': 0L,
          'zoom': 0L},
         1589147663.434],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': '| 7|mol_dynamics.py |Molecular dynamics of hard sphe'\
                       'res.|\r\n',
          'first-line': 10L,
          'folded-linenos': [],
          'sel-line': 43L,
          'sel-line-start': 2578L,
          'selection_end': 2578L,
          'selection_start': 2578L,
          'zoom': 0L},
         1589166487.257],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [('plot_results|0|',
                             525),
                            ('plot_results|0|.plot_positions|0|',
                             544)],
          'code-line': '            n,bins,_ = axis.hist([[particle.position'\
                       '[i] for particle in configuration] for i in range(le'\
                       'n(L))],\r\n',
          'first-line': 527L,
          'folded-linenos': [],
          'sel-line': 556L,
          'sel-line-start': 21535L,
          'selection_end': 21557L,
          'selection_start': 21557L,
          'zoom': 0L},
         1589181813.674],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [],
          'code-line': '            _,configuration = create_configuration(N'\
                       '=N, R=R, NT=args.NT, E=args.E, L=L )\r\n',
          'first-line': 629L,
          'folded-linenos': [],
          'sel-line': 637L,
          'sel-line-start': 24987L,
          'selection_end': 25037L,
          'selection_start': 25017L,
          'zoom': 0L},
         1589181891.871]],
        20),
        'current-loc': loc('simulation/mol_dynamics.py'),
        'editor-state-list': [(loc('simulation/mol_dynamics.py'),
                               {'attrib-starts': [('MolecularDynamicsError|0'\
        '|',
        32),
        ('MolecularDynamicsError|0|.__init__|0|',
         33)],
                                'code-line': '\r\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 35L,
                                'sel-line-start': 1253L,
                                'selection_end': 1253L,
                                'selection_start': 1253L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('simulation/mol_dynamics.py')]),
                               'open_files': [u'simulation/mol_dynamics.py']},
>>>>>>> 5a4950d47e6ad8b65eac73dcdd35f9e7510164c6
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           1),
<<<<<<< HEAD
                          1642278106.328775),
=======
                          1589314073.589),
>>>>>>> 5a4950d47e6ad8b65eac73dcdd35f9e7510164c6
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    3),
                                   1589181809.102),
                 'user_data': {}},
<<<<<<< HEAD
        'window-alloc': (-131,
                         33,
                         1548,
                         834)}]}
guimgr.visual-state = {loc('../../../Anaconda3/Lib/site-packages/scipy/optimize/nonlin.py'): {'attrib-starts': [('_nonlin_line_search',
        368),
        ('_nonlin_line_search.phi',
         375)],
        'first-line': 367,
        'folded-linenos': [],
        'sel-line': 380,
        'sel-line-start': 10733,
        'selection_end': 10733,
        'selection_start': 10733,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/artist.py'): {'attrib-starts': [('Artist',
        76),
        ('Artist.set',
         920)],
        'first-line': 913,
        'folded-linenos': [],
        'sel-line': 935,
        'sel-line-start': 29858,
        'selection_end': 29858,
        'selection_start': 29858,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/axes/_axes.py'): {'attrib-starts': [('Axes',
        80),
        ('Axes.set_title',
         123)],
        'first-line': 143,
        'folded-linenos': [],
        'sel-line': 165,
        'sel-line-start': 5739,
        'selection_end': 5739,
        'selection_start': 5739,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/axes/_base.py'): {'attrib-starts': [('_AxesBase',
        399),
        ('_AxesBase.set_xlim',
         2695)],
        'first-line': 2740,
        'folded-linenos': [],
        'sel-line': 2762,
        'sel-line-start': 98644,
        'selection_end': 98644,
        'selection_start': 98644,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/backends/backend_agg.py'): {'attrib-starts': [('FigureCanvasAgg',
        444),
        ('FigureCanvasAgg.print_png',
         525)],
        'first-line': 0,
        'folded-linenos': [535],
        'sel-line': 531,
        'sel-line-start': 18638,
        'selection_end': 18638,
        'selection_start': 18638,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/cm.py'): {'attrib-starts': [('ScalarMappable',
        168),
        ('ScalarMappable.autoscale_None',
         326)],
        'first-line': 310,
        'folded-linenos': [],
        'sel-line': 332,
        'sel-line-start': 10724,
        'selection_end': 10724,
        'selection_start': 10724,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/colors.py'): {'attrib-starts': [('ColorConverter',
        242),
        ('ColorConverter.to_rgba',
         333)],
        'first-line': 353,
        'folded-linenos': [],
        'sel-line': 375,
        'sel-line-start': 13600,
        'selection_end': 13600,
        'selection_start': 13600,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/image.py'): {'attrib-starts': [('_AxesImageBase',
        62),
        ('_AxesImageBase.set_data',
         434)],
        'first-line': 426,
        'folded-linenos': [],
        'sel-line': 448,
        'sel-line-start': 15275,
        'selection_end': 15275,
        'selection_start': 15275,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/markers.py'): {'attrib-starts': [('MarkerStyle',
        96),
        ('MarkerStyle.set_marker',
         232)],
        'first-line': 229,
        'folded-linenos': [],
        'sel-line': 251,
        'sel-line-start': 8195,
        'selection_end': 8195,
        'selection_start': 8195,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/projections/__init__.py'): {'attrib-starts': [('get_projection_class',
        53)],
        'first-line': 44,
        'folded-linenos': [],
        'sel-line': 66,
        'sel-line-start': 1685,
        'selection_end': 1685,
        'selection_start': 1685,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/pyplot.py'): {'attrib-starts': [('savefig',
        685)],
        'first-line': 674,
        'folded-linenos': [],
        'sel-line': 687,
        'sel-line-start': 22240,
        'selection_end': 22240,
        'selection_start': 22240,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/texmanager.py'): {'attrib-starts': [('TexManager',
        88),
        ('TexManager.make_dvi',
         384)],
        'first-line': 399,
        'folded-linenos': [],
        'sel-line': 421,
        'sel-line-start': 15446,
        'selection_end': 15446,
        'selection_start': 15446,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/numpy/lib/function_base.py'): {'attrib-starts': [('vectorize',
        1639),
        ('vectorize._get_ufunc_and_otypes',
         1812)],
        'first-line': 1830,
        'folded-linenos': [],
        'sel-line': 1835,
        'sel-line-start': 59038,
        'selection_end': 59038,
        'selection_start': 59038,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/numpy/linalg/linalg.py'): {'attrib-starts': [('norm',
        1975)],
        'first-line': 1961,
        'folded-linenos': [],
        'sel-line': 1975,
        'sel-line-start': 61503,
        'selection_end': 61511,
        'selection_start': 61507,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/scipy/optimize/minpack.py'): {'attrib-starts': [('_check_func',
        23)],
        'first-line': 11,
        'folded-linenos': [],
        'sel-line': 25,
        'sel-line-start': 843,
        'selection_end': 843,
        'selection_start': 843,
        'zoom': 0},
                       loc('../Anaconda3/Lib/argparse.py'): {'attrib-starts': [('_ActionsContainer|0|',
=======
        'window-alloc': (-12,
                         3,
                         1378,
                         749)}]}
guimgr.recent-documents = [loc('simulation/mol_dynamics.py')]
guimgr.visual-state = {loc('../../../Anaconda3/Lib/site-packages/scipy/optimize/nonlin.py'): {'a'\
        'ttrib-starts': [('_nonlin_line_search',
                          368),
                         ('_nonlin_line_search.phi',
                          375)],
        'first-line': 367L,
        'folded-linenos': [],
        'sel-line': 380L,
        'sel-line-start': 10733L,
        'selection_end': 10733L,
        'selection_start': 10733L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/artist.py'): {'a'\
        'ttrib-starts': [('Artist',
                          76),
                         ('Artist.set',
                          920)],
        'first-line': 913L,
        'folded-linenos': [],
        'sel-line': 935L,
        'sel-line-start': 29858L,
        'selection_end': 29858L,
        'selection_start': 29858L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/axes/_axes.py'): {'a'\
        'ttrib-starts': [('Axes',
                          80),
                         ('Axes.set_title',
                          123)],
        'first-line': 143L,
        'folded-linenos': [],
        'sel-line': 165L,
        'sel-line-start': 5739L,
        'selection_end': 5739L,
        'selection_start': 5739L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/axes/_base.py'): {'a'\
        'ttrib-starts': [('_AxesBase',
                          399),
                         ('_AxesBase.set_xlim',
                          2695)],
        'first-line': 2740L,
        'folded-linenos': [],
        'sel-line': 2762L,
        'sel-line-start': 98644L,
        'selection_end': 98644L,
        'selection_start': 98644L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/backends/backend_agg.py'): {'a'\
        'ttrib-starts': [('FigureCanvasAgg',
                          444),
                         ('FigureCanvasAgg.print_png',
                          525)],
        'first-line': 0L,
        'folded-linenos': [535L],
        'sel-line': 531L,
        'sel-line-start': 18638L,
        'selection_end': 18638L,
        'selection_start': 18638L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/cm.py'): {'a'\
        'ttrib-starts': [('ScalarMappable',
                          168),
                         ('ScalarMappable.autoscale_None',
                          326)],
        'first-line': 310L,
        'folded-linenos': [],
        'sel-line': 332L,
        'sel-line-start': 10724L,
        'selection_end': 10724L,
        'selection_start': 10724L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/colors.py'): {'a'\
        'ttrib-starts': [('ColorConverter',
                          242),
                         ('ColorConverter.to_rgba',
                          333)],
        'first-line': 353L,
        'folded-linenos': [],
        'sel-line': 375L,
        'sel-line-start': 13600L,
        'selection_end': 13600L,
        'selection_start': 13600L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/image.py'): {'a'\
        'ttrib-starts': [('_AxesImageBase',
                          62),
                         ('_AxesImageBase.set_data',
                          434)],
        'first-line': 426L,
        'folded-linenos': [],
        'sel-line': 448L,
        'sel-line-start': 15275L,
        'selection_end': 15275L,
        'selection_start': 15275L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/markers.py'): {'a'\
        'ttrib-starts': [('MarkerStyle',
                          96),
                         ('MarkerStyle.set_marker',
                          232)],
        'first-line': 229L,
        'folded-linenos': [],
        'sel-line': 251L,
        'sel-line-start': 8195L,
        'selection_end': 8195L,
        'selection_start': 8195L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/projections/__init__.py'): {'a'\
        'ttrib-starts': [('get_projection_class',
                          53)],
        'first-line': 44L,
        'folded-linenos': [],
        'sel-line': 66L,
        'sel-line-start': 1685L,
        'selection_end': 1685L,
        'selection_start': 1685L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/pyplot.py'): {'a'\
        'ttrib-starts': [('savefig',
                          685)],
        'first-line': 674L,
        'folded-linenos': [],
        'sel-line': 687L,
        'sel-line-start': 22240L,
        'selection_end': 22240L,
        'selection_start': 22240L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/texmanager.py'): {'a'\
        'ttrib-starts': [('TexManager',
                          88),
                         ('TexManager.make_dvi',
                          384)],
        'first-line': 399L,
        'folded-linenos': [],
        'sel-line': 421L,
        'sel-line-start': 15446L,
        'selection_end': 15446L,
        'selection_start': 15446L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/numpy/lib/function_base.py'): {'a'\
        'ttrib-starts': [('vectorize',
                          1639),
                         ('vectorize._get_ufunc_and_otypes',
                          1812)],
        'first-line': 1830L,
        'folded-linenos': [],
        'sel-line': 1835L,
        'sel-line-start': 59038L,
        'selection_end': 59038L,
        'selection_start': 59038L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/numpy/linalg/linalg.py'): {'a'\
        'ttrib-starts': [('norm',
                          1975)],
        'first-line': 1961L,
        'folded-linenos': [],
        'sel-line': 1975L,
        'sel-line-start': 61503L,
        'selection_end': 61511L,
        'selection_start': 61507L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/scipy/optimize/minpack.py'): {'a'\
        'ttrib-starts': [('_check_func',
                          23)],
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 843L,
        'selection_end': 843L,
        'selection_start': 843L,
        'zoom': 0L},
                       loc('../Downloads/_0adeab61ee99baa95652f6fa92645be2_lbmFlowAroundCylinder.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 93L,
        'folded-linenos': [],
        'sel-line': 99L,
        'sel-line-start': 3388L,
        'selection_end': 3388L,
        'selection_start': 3388L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/argparse.py'): {'attrib-starts': [('_'\
        'ActionsContainer|0|',
>>>>>>> 5a4950d47e6ad8b65eac73dcdd35f9e7510164c6
        1238),
        ('_ActionsContainer|0|.add_argument|0|',
         1321)],
        'code-line': '        action = action_class(**kwargs)\n',
<<<<<<< HEAD
        'first-line': 1332,
        'folded-linenos': [],
        'sel-line': 1352,
        'sel-line-start': 47598,
        'selection_end': 47598,
        'selection_start': 47598,
        'zoom': 0},
                       loc('../Anaconda3/Lib/site-packages/matplotlib/backends/backend_agg.py'): {'attrib-starts': [('RendererAgg|0|',
        60),
        ('RendererAgg|0|.draw_path|0|',
         118)],
        'code-line': '                raise OverflowError("Exceeded cell block limit (set "\n',
        'first-line': 127,
        'folded-linenos': [],
        'sel-line': 147,
        'sel-line-start': 5298,
        'selection_end': 5298,
        'selection_start': 5298,
        'zoom': 0},
                       loc('../Anaconda3/Lib/site-packages/matplotlib/projections/__init__.py'): {'attrib-starts': [('get_projection_class|0|',
        47)],
        'code-line': '        raise ValueError("Unknown projection %r" % projection)\n',
        'first-line': 40,
        'folded-linenos': [],
        'sel-line': 59,
        'sel-line-start': 1461,
        'selection_end': 1461,
        'selection_start': 1461,
        'zoom': 0},
                       loc('../Anaconda3/Lib/site-packages/numpy/_distributor_init.py'): {'attrib-starts': [],
        'code-line': '    from . import _mklinit\n',
        'first-line': 14,
        'folded-linenos': [],
        'sel-line': 33,
        'sel-line-start': 996,
        'selection_end': 996,
        'selection_start': 996,
        'zoom': 0},
                       loc('../Anaconda3/Lib/site-packages/numpy/core/_asarray.py'): {'attrib-starts': [('asarray|0|',
        16)],
        'code-line': '    return array(a, dtype, copy=False, order=order)\n',
        'first-line': 65,
        'folded-linenos': [],
        'sel-line': 84,
        'sel-line-start': 2508,
        'selection_end': 2508,
        'selection_start': 2508,
        'zoom': 0},
                       loc('../Downloads/_0adeab61ee99baa95652f6fa92645be2_lbmFlowAroundCylinder.py'): {'attrib-starts': [],
        'first-line': 93,
        'folded-linenos': [],
        'sel-line': 99,
        'sel-line-start': 3388,
        'selection_end': 3388,
        'selection_start': 3388,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/matplotlib/artist.py'): {'attrib-starts': [('Artist|0|',
        56),
        ('Artist|0|.update|0|',
         924),
        ('Artist|0|.update|0|._update_property|0|',
         928)],
        'code-line': '                                         .format(type(self).__name__, k))\n',
        'first-line': 933,
        'folded-linenos': [],
        'sel-line': 952,
        'sel-line-start': 30148,
        'selection_end': 30148,
        'selection_start': 30148,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/matplotlib/axes/_base.py'): {'attrib-starts': [('_AxesBase|0|',
        409),
        ('_AxesBase|0|._update_title_position|0|',
         2502)],
        'code-line': '                x, y = title.get_position()\n',
        'first-line': 2496,
        'folded-linenos': [],
        'sel-line': 2516,
        'sel-line-start': 94030,
        'selection_end': 94030,
        'selection_start': 94030,
        'zoom': 0},
=======
        'first-line': 1332L,
        'folded-linenos': [],
        'sel-line': 1352L,
        'sel-line-start': 47598L,
        'selection_end': 47598L,
        'selection_start': 47598L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/site-packages/matplotlib/artist.py'): {'a'\
        'ttrib-starts': [('Artist|0|',
                          56),
                         ('Artist|0|.update|0|',
                          924),
                         ('Artist|0|.update|0|._update_property|0|',
                          928)],
        'code-line': '                                         .format(type('\
                     'self).__name__, k))\n',
        'first-line': 933L,
        'folded-linenos': [],
        'sel-line': 952L,
        'sel-line-start': 30148L,
        'selection_end': 30148L,
        'selection_start': 30148L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/site-packages/matplotlib/axes/_base.py'): {'a'\
        'ttrib-starts': [('_AxesBase|0|',
                          409),
                         ('_AxesBase|0|._update_title_position|0|',
                          2502)],
        'code-line': '                x, y = title.get_position()\n',
        'first-line': 2496L,
        'folded-linenos': [],
        'sel-line': 2516L,
        'sel-line-start': 94030L,
        'selection_end': 94030L,
        'selection_start': 94030L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/site-packages/matplotlib/backends/backend_agg.py'): {'a'\
        'ttrib-starts': [('RendererAgg|0|',
                          60),
                         ('RendererAgg|0|.draw_path|0|',
                          118)],
        'code-line': '                raise OverflowError("Exceeded cell blo'\
                     'ck limit (set "\n',
        'first-line': 127L,
        'folded-linenos': [],
        'sel-line': 147L,
        'sel-line-start': 5298L,
        'selection_end': 5298L,
        'selection_start': 5298L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/site-packages/matplotlib/projections/__init__.py'): {'a'\
        'ttrib-starts': [('get_projection_class|0|',
                          47)],
        'code-line': '        raise ValueError("Unknown projection %r" % pro'\
                     'jection)\n',
        'first-line': 40L,
        'folded-linenos': [],
        'sel-line': 59L,
        'sel-line-start': 1461L,
        'selection_end': 1461L,
        'selection_start': 1461L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/site-packages/numpy/_distributor_init.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '    from . import _mklinit\n',
        'first-line': 14L,
        'folded-linenos': [],
        'sel-line': 33L,
        'sel-line-start': 996L,
        'selection_end': 996L,
        'selection_start': 996L,
        'zoom': 0L},
                       loc('../anaconda3/Lib/site-packages/numpy/core/_asarray.py'): {'a'\
        'ttrib-starts': [('asarray|0|',
                          16)],
        'code-line': '    return array(a, dtype, copy=False, order=order)\n',
        'first-line': 65L,
        'folded-linenos': [],
        'sel-line': 84L,
        'sel-line-start': 2508L,
        'selection_end': 2508L,
        'selection_start': 2508L,
        'zoom': 0L},
>>>>>>> 5a4950d47e6ad8b65eac73dcdd35f9e7510164c6
                       loc('../astro/galaxy/make_img.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../astro/make_img.py'): {'attrib-starts': [],
        'first-line': 15,
        'folded-linenos': [],
        'sel-line': 19,
        'sel-line-start': 776,
        'selection_end': 776,
        'selection_start': 776,
        'zoom': 0},
                       loc('../astro/plot_points.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../bioinformatics/BA8E.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 686,
        'selection_start': 0,
        'zoom': 0},
                       loc('../galaxy/configure.py'): {'attrib-starts': [],
        'code-line': '# encode\r\n',
        'first-line': 155,
        'folded-linenos': [],
        'sel-line': 162,
        'sel-line-start': 5756,
        'selection_end': 5895,
        'selection_start': 5756,
        'zoom': 0},
                       loc('README.md'): {'attrib-starts': [],
<<<<<<< HEAD
        'code-line': '| 7|mol_dynamics.py |Molecular dynamics of hard spheres.|\r\n',
        'first-line': 10,
        'folded-linenos': [],
        'sel-line': 43,
        'sel-line-start': 2578,
        'selection_end': 2578,
        'selection_start': 2578,
        'zoom': 0},
=======
        'code-line': '| 7|mol_dynamics.py |Molecular dynamics of hard sphere'\
                     's.|\r\n',
        'first-line': 10L,
        'folded-linenos': [],
        'sel-line': 43L,
        'sel-line-start': 2578L,
        'selection_end': 2578L,
        'selection_start': 2578L,
        'zoom': 0L},
>>>>>>> 5a4950d47e6ad8b65eac73dcdd35f9e7510164c6
                       loc('Wolfram_ca.py'): {'attrib-starts': [('step',
        24),
        ('step.index',
         25)],
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 26,
        'sel-line-start': 887,
        'selection_end': 889,
        'selection_start': 889,
        'zoom': 0},
                       loc('bacteria.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('barnes_hut.py'): {'attrib-starts': [],
        'first-line': 21,
        'folded-linenos': [],
        'sel-line': 27,
        'sel-line-start': 1177,
        'selection_end': 1225,
        'selection_start': 1201,
        'zoom': 0},
                       loc('chaos_book/Rossler/CycleStability.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('chaos_book/Rossler/Newton.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('chaos_book/Rossler/Poincare.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('chaos_book/Rossler/Rossler.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('chaos_book/Rossler/RungeKutta.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 32,
        'selection_start': 32,
        'zoom': 0},
                       loc('chaos_book/Rossler/Stability.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('chaos_book/hw1Rossler/CycleStability.py'): {'attrib-starts': [],
        'code-line': 'import numpy as np  # Import NumPy\n',
        'first-line': 72,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('chaos_book/hw1Rossler/Newton.py'): {'attrib-starts': [],
        'code-line': 'import numpy as np  # Import NumPy\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('chaos_book/hw1Rossler/Poincare.py'): {'attrib-starts': [],
        'code-line': '    print(rfixed)  #  8.38094142\n',
        'first-line': 163,
        'folded-linenos': [],
        'sel-line': 175,
        'sel-line-start': 9037,
        'selection_end': 9069,
        'selection_start': 9059,
        'zoom': 0},
                       loc('chaos_book/hw1Rossler/README.md'): {'attrib-starts': [],
        'code-line': '# Homework for week 1 -- Rossler\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 405,
        'selection_start': 0,
        'zoom': 0},
                       loc('chaos_book/hw1Rossler/Rossler.py'): {'attrib-starts': [],
        'code-line': '# Q1.4  Integrating Roessler system \n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('chaos_book/hw1Rossler/Stability.py'): {'attrib-starts': [],
        'code-line': 'import numpy as np  # Import NumPy\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('chaos_book/hw2/Bakers map.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2019 Greenweaves Software Limited\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 683,
        'selection_start': 0,
        'zoom': 0},
                       loc('chaos_book/hw2/floquet.py'): {'attrib-starts': [],
        'code-line': "plt.savefig('floquet.png')\r\n",
        'first-line': 17,
        'folded-linenos': [],
        'sel-line': 37,
        'sel-line-start': 1583,
        'selection_end': 1608,
        'selection_start': 1608,
        'zoom': 0},
                       loc('duffing.py'): {'attrib-starts': [('duffing|0|',
        22)],
        'code-line': 'def duffing(y):\r\n',
        'first-line': 31,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 943,
        'selection_end': 958,
        'selection_start': 958,
        'zoom': 0},
                       loc('ex2_integrator.py'): {'attrib-starts': [],
        'first-line': 21,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('ex3_LotkaVolterra.py'): {'attrib-starts': [],
        'first-line': 159,
        'folded-linenos': [],
        'sel-line': 179,
        'sel-line-start': 5390,
        'selection_end': 5412,
        'selection_start': 5412,
        'zoom': 0},
                       loc('henon.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2019 Greenweaves Software Limited\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 683,
        'selection_start': 0,
        'zoom': 0},
                       loc('lbmFlowAroundCylinder.py'): {'attrib-starts': [('visualize_velocity',
        122)],
        'first-line': 150,
        'folded-linenos': [],
        'sel-line': 137,
        'sel-line-start': 4723,
        'selection_end': 4731,
        'selection_start': 4731,
        'zoom': 0},
                       loc('lorentz.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 61,
        'sel-line-start': 2219,
        'selection_end': 2246,
        'selection_start': 2246,
        'zoom': 0},
                       loc('lorenz.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2017 Greenweaves Software Pty Ltd\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 684,
        'selection_start': 0,
        'zoom': 0},
                       loc('mauro.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 87,
        'sel-line-start': 3171,
        'selection_end': 3236,
        'selection_start': 3179,
        'zoom': 0},
                       loc('mol2.py'): {'attrib-starts': [('get_next_wall_collision|0|',
        162),
        ('get_next_wall_collision|0|.get_collision_with_pair|0|',
         166)],
        'code-line': '            return t + (L[index]-R-distance)/velocity,wall_positive\r\n',
        'first-line': 164,
        'folded-linenos': [],
        'sel-line': 172,
        'sel-line-start': 5594,
        'selection_end': 5613,
        'selection_start': 5613,
        'zoom': 0},
                       loc('ode-test.py'): {'attrib-starts': [],
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 27,
        'sel-line-start': 645,
        'selection_end': 667,
        'selection_start': 645,
        'zoom': 0},
                       loc('parityRule.py'): {'attrib-starts': [],
        'first-line': 23,
        'folded-linenos': [],
        'sel-line': 51,
        'sel-line-start': 1755,
        'selection_end': 1756,
        'selection_start': 1756,
        'zoom': 0},
                       loc('parityRuleSolution.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 240,
        'selection_end': 264,
        'selection_start': 264,
        'zoom': 0},
                       loc('phase.py'): {'attrib-starts': [('generate|0|',
        114)],
        'code-line': 'def generate(f=lambda x,y:(x,y),nx=64, ny = 64,xmin=-10,xmax=10,ymin=-10,ymax=10):\r\n',
        'first-line': 177,
        'folded-linenos': [],
        'sel-line': 114,
        'sel-line-start': 4031,
        'selection_end': 4077,
        'selection_start': 4062,
        'zoom': 0},
                       loc('rk4.py'): {'attrib-starts': [('rk4|0|',
        17)],
                                       'code-line': '    return tuple([yy+(_k0+2*_k1+2*_k2+_k3)/6 for yy,_k0,_k1,_k2,_k3 in zip(y,k0,k1,k2,k3)])\r\n',
                                       'first-line': 13,
                                       'folded-linenos': [],
                                       'sel-line': 30,
                                       'sel-line-start': 1194,
                                       'selection_end': 1218,
                                       'selection_start': 1216,
                                       'zoom': 0},
                       loc('rki.py'): {'attrib-starts': [('Driver',
        17)],
                                       'first-line': 0,
                                       'folded-linenos': [],
                                       'sel-line': 17,
                                       'sel-line-start': 707,
                                       'selection_end': 719,
                                       'selection_start': 713,
                                       'zoom': 0},
                       loc('roessler.py'): {'attrib-starts': [],
        'first-line': 23,
        'folded-linenos': [],
        'sel-line': 34,
        'sel-line-start': 1267,
        'selection_end': 1290,
        'selection_start': 1284,
        'zoom': 0},
                       loc('simulation/bacteria.py'): {'attrib-starts': [],
        'code-line': 'from __future__ import print_function, division #compatibility py2 - py3\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('simulation/barnes_hut.py'): {'attrib-starts': [],
        'code-line': '# Simple Python implementation of a Barnes-Hut galaxy simulator.\r\n',
        'first-line': 141,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('simulation/mol2.py'): {'attrib-starts': [],
        'code-line': '            particle.evolve(t_next-t)\r\n',
        'first-line': 229,
        'folded-linenos': [],
        'sel-line': 250,
        'sel-line-start': 9147,
        'selection_end': 9184,
        'selection_start': 9184,
        'zoom': 0},
                       loc('simulation/mol_create.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 686,
        'selection_end': 686,
        'selection_start': 686,
        'zoom': 0},
                       loc('simulation/mol_dynamics.py'): {'attrib-starts': [('plot_results|0|',
        525),
        ('plot_results|0|.plot_positions|0|',
         544)],
        'code-line': '            n,bins,_ = axis.hist([[particle.position[i] for particle in configuration] for i in range(len(L))],\r\n',
        'first-line': 541,
        'folded-linenos': [],
        'sel-line': 556,
        'sel-line-start': 21535,
        'selection_end': 21557,
        'selection_start': 21557,
        'zoom': 0},
                       loc('simulation/spheres.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('simulation/spike.py'): {'attrib-starts': [('fix_bins|0|',
        0)],
        'code-line': 'def fix_bins(n,bins,quota=5):\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 431,
        'selection_start': 0,
        'zoom': 0},
                       loc('simulation/trafficLights.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('strogatz/6-3-10.png'): {'attrib-starts': [],
        'code-line': 'Â\x89PNG\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('strogatz/README.md'): {'attrib-starts': [],
        'code-line': '# Dynamics\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 727,
        'selection_start': 0,
        'zoom': 0},
                       loc('strogatz/example_8_7_1.py'): {'attrib-starts': [],
        'code-line': "    plot(start=(2,0),color='r')\r\n",
        'first-line': 15,
        'folded-linenos': [],
        'sel-line': 34,
        'sel-line-start': 1238,
        'selection_end': 1269,
        'selection_start': 1242,
        'zoom': 0},
                       loc('strogatz/exercise_10_6_1.py'): {'attrib-starts': [],
        'code-line': 'import matplotlib.pyplot as plt\r\n',
        'first-line': 27,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('strogatz/exercise_3_7_6.py'): {'attrib-starts': [],
        'code-line': "colours = ['r','g','b','c','m','y']\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 123,
        'selection_end': 157,
        'selection_start': 157,
        'zoom': 0},
                       loc('strogatz/exercise_6_1.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2017-2019 Greenweaves Software Limited\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 689,
        'selection_start': 0,
        'zoom': 0},
                       loc('strogatz/exercise_6_2.py'): {'attrib-starts': [],
        'code-line': "sys.path.append('../')\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 19,
        'sel-line-start': 782,
        'selection_end': 804,
        'selection_start': 782,
        'zoom': 0},
                       loc('strogatz/exercise_6_3.py'): {'attrib-starts': [],
        'code-line': 'X,Y,U,V,fixed=phase.generate(f=f,nx=256, ny = 256,xmin=-100,xmax=100,ymin=-100,ymax=100)\r\n',
        'first-line': 27,
        'folded-linenos': [],
        'sel-line': 31,
        'sel-line-start': 1180,
        'selection_end': 1195,
        'selection_start': 1195,
        'zoom': 0},
                       loc('strogatz/exercise_6_3_10.py'): {'attrib-starts': [],
        'code-line': 'phase.plot_stability(f=f,fixed_points=fixed_points,R=0.05,Limit=10.0,step=0.1,S=50,N=5000,K=100)\r\n',
        'first-line': 15,
        'folded-linenos': [],
        'sel-line': 30,
        'sel-line-start': 1092,
        'selection_end': 1188,
        'selection_start': 1092,
        'zoom': 0},
                       loc('strogatz/exercise_6_4_4.py'): {'attrib-starts': [],
        'code-line': '    phase.plot_stability(f=f,fixed_points=fixed_points,Limit=5,step=0.1,N=5000,accept=phase.right_upper_quadrant,K=10)\r\n',
        'first-line': 17,
        'folded-linenos': [],
        'sel-line': 35,
        'sel-line-start': 1296,
        'selection_end': 1414,
        'selection_start': 1300,
        'zoom': 0},
                       loc('strogatz/exercise_6_4_8.py'): {'attrib-starts': [],
        'code-line': 'phase.plot_stability(f=lambda x,y:f(x,y,a,b,c),fixed_points=fixed_points,Limit=5,step=0.1,N=5000,\r\n',
        'first-line': 15,
        'folded-linenos': [],
        'sel-line': 34,
        'sel-line-start': 1305,
        'selection_end': 1470,
        'selection_start': 1305,
        'zoom': 0},
                       loc('strogatz/exercise_6_5_19.py'): {'attrib-starts': [],
        'code-line': '# This software is distributed in the hope that it will be useful,\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 299,
        'selection_end': 322,
        'selection_start': 322,
        'zoom': 0},
                       loc('strogatz/strogatz_6_1.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2017 Greenweaves Software Pty Ltd\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('strogatz_10_6_1.py'): {'attrib-starts': [],
        'first-line': 26,
        'folded-linenos': [],
        'sel-line': 39,
        'sel-line-start': 1076,
        'selection_end': 1101,
        'selection_start': 1101,
        'zoom': 0},
                       loc('strogatz_6_1.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 718,
        'selection_end': 735,
        'selection_start': 735,
        'zoom': 0},
                       loc('strogatz_6_1_1.py'): {'attrib-starts': [],
        'first-line': 42,
        'folded-linenos': [],
        'sel-line': 54,
        'sel-line-start': 1584,
        'selection_end': 1614,
        'selection_start': 1584,
        'zoom': 0},
                       loc('strogatz_6_2.py'): {'attrib-starts': [],
        'first-line': 8,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 718,
        'selection_end': 734,
        'selection_start': 734,
        'zoom': 0},
                       loc('strogatz_6_3.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 718,
        'selection_end': 734,
        'selection_start': 734,
        'zoom': 0},
                       loc('strogatz_6_4.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 718,
        'selection_end': 735,
        'selection_start': 735,
        'zoom': 0},
                       loc('strogatz_6_5_19.py'): {'attrib-starts': [],
        'first-line': 5,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 718,
        'selection_end': 735,
        'selection_start': 735,
        'zoom': 0},
                       loc('strogatz_6_6_1.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('test.py'): {'attrib-starts': [],
        'first-line': 6,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 380,
        'selection_end': 417,
        'selection_start': 380,
        'zoom': 0},
                       loc('trafficLights.py'): {'attrib-starts': [],
        'first-line': 88,
        'folded-linenos': [],
        'sel-line': 127,
        'sel-line-start': 3401,
        'selection_end': 3420,
        'selection_start': 3420,
        'zoom': 0}}
proj.env-vars = {None: ('default',
<<<<<<< HEAD
                        [''])}
=======
                        [u''])}
>>>>>>> 5a4950d47e6ad8b65eac73dcdd35f9e7510164c6
debug.recent-run-args = {loc('henon.py'): ['--xmin 0.0 --xmax 0.5 --ymin 0.2 --ymax 0.3',
        '--xmin 0.0 --x_max 0.5 --y_min 0.2 --y_max 0.3',
        '-N 10000',
        '-N 1000000'],
                         loc('simulation/mol_dynamics.py'): [' --show --load issue8.bin',
        ' --show --load torus.bin',
        ' --show --N 64 --NT 10000 --T 1000 --plot temp  --freq 100',
        ' --show --N 64 --NT 10000 --T 1000 --plot temp  --freq 1',
        ' --show --N 64 --NT 10000 --T 1000 --plot temp  --freq 1000',
        ' --show --N 64 --R 0 --NT 10000 --T 1000 --plot temp  --freq 1000',
        ' --show --N 64 --R 0 --NT 10000 --NC 100 --plot temp  --freq 1000',
        ' --show --N 64 --rho 0.18 --NT 10000 --NC 100 --plot temp  --freq 1000',
        ' --show --N 64 --rho 0.18 --NT 10000 --NC 10000 --plot temp  --freq 1000',
        ' --show --N 64 --rho 0.18 --NT 10000 --NC 10000 --plot temp',
        ' --show --N 64 --rho 0.18 --NT 1000 --NC 10000 --plot temp',
        ' --show --N 64 --rho 0.18 --NT 1000 --NC 1000 --plot temp',
        ' --show --N 64 --rho 0.18 --NT 1000 --NC 100 --plot temp',
        ' --show --N 64 --rho 0.18 --NT 100 --NC 100 --plot temp',
        ' --show --N 64 --rho 0.18 --NT 1000000 --NC 10000 --plot temp',
        ' --show --N 64 --rho 0.18 --NT 1000000 --NC 10000',
        ' --show --N 64 --rho 0.18 --NT 1000000 --NC 1000',
        ' --show --N 64 --rho 0.18 --NT 100000 --NC 1000',
        ' --show --N 10 --rho 0.18 --NT 100000 --NC 1000',
        ' --show --N 10 --rho 0.18 --NT 10000 --NC 1000',
        ' --show --N 10 --rho 0.18 --NT 10000',
        ' --show --N 10 --rho 0.18 --NT 1000',
        ' --show --N 10 --rho 0.18',
        ' --show --N 10',
        ' --show --T 10   --load config.bin',
        ' --show --T 10   --load torus.bin',
        ' --show --T 10   --load foo.bin',
        '--N 10  --show --T 10  --topology Torus  --save foo.bin',
        '--N 10  --show --T 10  --topology Torus  ',
        '--N 10  --show --T 10  --topology Torus  --load torus.bin'],
                         loc('simulation/spheres.py'): ['--N 1 --seed 1',
        '--N 1',
        '--help',
        '--R 0.125 --N 40 --NT 1000',
        '--R 0.125 --N 50 --NT 1000',
        '--R 0.125 --N 100 --NT 1000',
        '--R 0.125 --N 100 -NT 1000',
        '--R 0.125 --N 100',
        '--R 0.125',
        '--R .25',
        '--R .125',
        '--L 1 22 3',
        '--L 1 -22 3',
        '--L 1 2 3',
        '--L 2',
        'L=2',
        '--L 5',
        '--L 1 2 3 4',
        '--L 1',
        '--T 1000']}
edit.file-encoding = {loc('README.md'): 'utf_8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqEmVIDbK',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(4,)],
                                 'selected-nodes': [(5,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/framework/func_graph.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/framework/func_graph.py'),
                      'check_mutation')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/keras/layers/core.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/keras/layers/core.py'),
                      'Activation')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'),
                      'TexManager')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/numpy/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/numpy/conftest.py'),
                      '')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('../anaconda3/Lib/_collections_abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../anaconda3/Lib/_collections_abc.py'),
                      'AsyncGenerator')]},
        loc('../learn/README.md'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('../learn/bayes1.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('generic attribute',
        loc('../learn/bayes1.py'),
        'alphas')]},
        loc('../learn/cavi1.py'): {'expanded-nodes': [],
                                   'selected-nodes': [[('generic attribute',
        loc('../learn/cavi1.py'),
        'ys')]],
                                   'top-node': [('generic attribute',
        loc('../learn/cavi1.py'),
        'ax1')]},
        loc('../learn/fashion.py'): {'expanded-nodes': [],
                                     'selected-nodes': [[('generic attribute',
        loc('../learn/fashion.py'),
        '_')]],
                                     'top-node': [('generic attribute',
        loc('../learn/fashion.py'),
        'class_names')]},
        loc('../learn/fcs.py'): {'expanded-nodes': [],
                                 'selected-nodes': [None],
                                 'top-node': None},
        loc('../learn/fcs/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../learn/fcs/fcs.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('generic attribute',
        loc('../learn/fcs/fcs.py'),
        'args')]},
        loc('../learn/fcs/gcps.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../learn/fcs/gcps.py'),
        'a')]},
        loc('../learn/fcs/partition.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../learn/fcs/partition.py'),
                      'args')]},
        loc('../learn/fcs/plotreds.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../learn/fcs/plotreds.py'),
                      'args')]},
        loc('../learn/flowers.py'): {'expanded-nodes': [],
                                     'selected-nodes': [[('generic attribute',
        loc('../learn/flowers.py'),
        '_')]],
                                     'top-node': [('generic attribute',
        loc('../learn/flowers.py'),
        'args')]},
        loc('../learn/train.py'): {'expanded-nodes': [],
                                   'selected-nodes': [[('generic attribute',
        loc('../learn/train.py'),
        '_')]],
                                   'top-node': [('generic attribute',
        loc('../learn/train.py'),
        'alpha')]}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'color',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'checkpoint_callback',
                                       'fReverse': False,
                                       'fSearchText': 'PIL',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 157,
                       'selection_end': 157,
                       'selection_start': 157,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('../learn/flowers.py'),
        {'attrib-starts': [],
         'code-line': 'import PIL.Image\r\n',
         'first-line': 29,
         'folded-linenos': [],
         'sel-line': 42,
         'sel-line-start': 1793,
         'selection_end': 1803,
         'selection_start': 1800,
         'zoom': 0},
        1600737826.307],
        [loc('../learn/flowers.py'),
         {'attrib-starts': [],
          'code-line': '# Create Neural Network model and compile it\r\n',
          'first-line': 63,
          'folded-linenos': [],
          'sel-line': 81,
          'sel-line-start': 3507,
          'selection_end': 3547,
          'selection_start': 3544,
          'zoom': 0},
         1600737827.988],
        [loc('../learn/flowers.py'),
         {'attrib-starts': [('create_model|0|',
                             86)],
          'code-line': "    product.compile(optimizer = 'adam',\r\n",
          'first-line': 97,
          'folded-linenos': [],
          'sel-line': 115,
          'sel-line-start': 4740,
          'selection_end': 4758,
          'selection_start': 4755,
          'zoom': 0},
         1600737829.237],
        [loc('../learn/flowers.py'),
         {'attrib-starts': [],
          'code-line': '                               learning_rate_callback]          \r\n',
          'first-line': 214,
          'folded-linenos': [],
          'sel-line': 232,
          'sel-line-start': 9695,
          'selection_end': 9748,
          'selection_start': 9726,
          'zoom': 0},
         1600809420.177],
        [loc('../learn/flowers.py'),
         {'attrib-starts': [],
          'code-line': '    learning_rate_callback = LearningRateScheduler(scheduler)\r\n',
          'first-line': 194,
          'folded-linenos': [],
          'sel-line': 206,
          'sel-line-start': 8678,
          'selection_end': 8738,
          'selection_start': 8729,
          'zoom': 0},
         1600809437.051],
        [loc('../learn/flowers.py'),
         {'attrib-starts': [],
          'code-line': '        ys = [math.log10( scheduler(x)) for x in xs]\r\n',
          'first-line': 307,
          'folded-linenos': [],
          'sel-line': 323,
          'sel-line-start': 13133,
          'selection_end': 13168,
          'selection_start': 13159,
          'zoom': 0},
         1600810028.727],
        [loc('../learn/flowers.py'),
         {'attrib-starts': [],
          'code-line': '        checkpoint_path             = os.path.join(args.path, args.checkpoint)\r\n',
          'first-line': 205,
          'folded-linenos': [],
          'sel-line': 223,
          'sel-line-start': 9267,
          'selection_end': 9290,
          'selection_start': 9275,
          'zoom': 0},
         1600821278.907],
        [loc('../learn/flowers.py'),
         {'attrib-starts': [],
          'code-line': '        remove_checkpoint(os.path.join(args.path, args.checkpoint))\r\n',
          'first-line': 215,
          'folded-linenos': [],
          'sel-line': 232,
          'sel-line-start': 9544,
          'selection_end': 9544,
          'selection_start': 9544,
          'zoom': 0},
         1600823859.417],
        [loc('../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'),
         {'attrib-starts': [('join|0|',
                             32)],
          'code-line': '    path = os.fspath(path)\r\n',
          'first-line': 58,
          'folded-linenos': [],
          'sel-line': 77,
          'sel-line-start': 2508,
          'selection_end': 2508,
          'selection_start': 2508,
          'zoom': 0},
         1600823923.747],
        [loc('../learn/flowers.py'),
         {'attrib-starts': [],
          'code-line': '        if not ensure_checkpoint_removed(os.path.join(args.path, args.checkpoint)): sys.exit()\r\n',
          'first-line': 225,
          'folded-linenos': [],
          'sel-line': 233,
          'sel-line-start': 9570,
          'selection_end': 9610,
          'selection_start': 9585,
          'zoom': 0},
         1600824133.449],
        [loc('../learn/flowers.py'),
         {'attrib-starts': [],
          'code-line': '# Generator to iterate through test data:\r\n',
          'first-line': 265,
          'folded-linenos': [],
          'sel-line': 222,
          'sel-line-start': 9064,
          'selection_end': 9082,
          'selection_start': 9082,
          'zoom': 0},
         1607155802.417],
        [loc('../learn/README.md'),
         {'attrib-starts': [],
          'code-line': '|torch-nn.py|[train](https://pytorch.org/tutorials/beginner/blitz/cifar10_tutorial.html#sphx-glr-beginner-blitz-cifar10-tutorial-py)|\r\n',
          'first-line': 39,
          'folded-linenos': [],
          'sel-line': 44,
          'sel-line-start': 2455,
          'selection_end': 2588,
          'selection_start': 2588,
          'zoom': 0},
         1613453382.921],
        [loc('strogatz/example_8_7_1.py'),
         {'attrib-starts': [],
          'code-line': '# Copyright (C) 2017-2019 Greenweaves Software Limited\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0,
          'zoom': 0},
         1642278812.5195754],
        [loc('strogatz/exercise_3_7_6.py'),
         {'attrib-starts': [],
          'code-line': 'import matplotlib.pyplot as plt\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0,
          'zoom': 0},
         1644523650.1939251],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': '# Dynamics\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0,
          'zoom': 0},
         1644523657.6908064],
        [loc('simulation/trafficLights.py'),
         {'attrib-starts': [],
          'code-line': '#!/usr/bin/python\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0,
          'zoom': 0},
         1644523762.3840578],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': '# Dynamics\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0,
          'zoom': 0},
         1644523774.5043304],
        [loc('ntest.py'),
         {'attrib-starts': [],
          'code-line': 'from numba import jit\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0,
          'zoom': 0},
         1644524127.50497],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': ' ntest.py | Demo for [Numba](), an open source JIT compiler that translates a subset of Python and NumPy code into fast machine code. \r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 9,
          'sel-line-start': 369,
          'selection_end': 400,
          'selection_start': 400,
          'zoom': 0},
         1644524195.138214],
        [loc('ntest.py'),
         {'attrib-starts': [],
          'code-line': "'''Numba is an open source JIT compiler that translates a subset of Python and NumPy code into fast machine code. '''\r\n",
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 114,
          'selection_start': 114,
          'zoom': 0},
         1644524238.325929]],
        20),
        'current-loc': loc('README.md'),
        'editor-state-list': [(loc('ntest.py'),
                               {'attrib-starts': [],
                                'code-line': "'''Numba is an open source JIT compiler that translates a subset of Python and NumPy code into fast machine code. '''\r\n",
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 0,
                                'sel-line-start': 0,
                                'selection_end': 114,
                                'selection_start': 114,
                                'zoom': 0}),
                              (loc('README.md'),
                               {'attrib-starts': [],
                                'code-line': 'utilities.py | Miscellaneous helpful functions\r\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 16,
                                'sel-line-start': 1088,
                                'selection_end': 1088,
                                'selection_start': 1088,
                                'zoom': 0})],
        'has-focus': True,
        'locked': False},
        [loc('ntest.py'),
         loc('README.md')]),
                               'open_files': ['ntest.py',
        'README.md']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           1),
                          1618253199.533),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1600548987.368),
                 'user_data': {}},
        'window-alloc': (0,
                         1,
                         1362,
                         717)}]}
guimgr.recent-documents = [loc('README.md'),
                           loc('ntest.py')]
guimgr.visual-state = {loc('README.md'): {'attrib-starts': [],
        'code-line': '# Dynamics\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('simulation/trafficLights.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('strogatz/exercise_3_7_6.py'): {'attrib-starts': [],
        'code-line': 'import matplotlib.pyplot as plt\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0}}
proj.build-cmd = {None: ('default',
                         None)}
proj.pyexec = {None: ('custom',
                      'c:\\Users\\Weka\\AppData\\Local\\Programs\\Python\\Python38\\python.exe')}
search.replace-history = ['eta',
                          'l',
                          'k',
                          'particled_involved',
                          '.t_expected',
                          'affected_particles',
                          'get_index',
                          'consolidated_bins',
                          'new_counts',
                          'consolidate_bins',
                          'box',
                          'Box',
                          'product',
                          'N',
                          'R',
                          'D',
                          'return',
                          'args_L',
                          'args.L']
search.search-history = ['rho',
                         'topo',
                         'topology',
                         'topolgy',
                         'torus',
                         'particle_l',
                         'particle_k',
                         '_i',
                         'save',
                         'bin',
                         'affected_particles',
                         '.t',
                         'affected',
                         'number',
                         'numbeer',
                         'get_rho',
                         'bins1',
                         'n1',
                         'fix_bins',
                         'simple']
